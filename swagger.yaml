swagger: '2.0'
info:
  version: "1"
  title: "Polypanda APIs"
  description: API Documentation for project Piolypanda。Polypanda is a blockchain game project。  
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: "dev.polypanda.io:10443"

basePath: /api/v1
tags:
- name: "General"
  description: General operations that not related to Data
- name: "Panda"
  description: Anything to do with panda table
- name: "Display"
  description: Configuration for displaying data
  
schemes:
 - https

consumes:
- application/json
produces:
- application/json

paths:
  /status:
    x-summary: Status
    get:
      tags:
      - "General"
      summary: Return Instance Status
      description: Return instance status. This is mainly for keep-alive response message. 
        Git last commit short hash in master will also be stored in Value field.
      responses:
        200:
          description: response ok
          schema:
            $ref: '#/definitions/RetSimple'
    
  /panda:
    x-summary: Panda List
    get:
      tags: 
      - "Panda"
      summary: Get a list of pandas
      description: The query will be return a list of Panda Objects。 
          You also can get panda list by pages by using pageNum. The count of returned Panda list is saved in Value field.
          However, if Panda objects exceeds maxRecords defined in app.conf. It only return maxRecord Pandas.
        It is better to use page parameter to get Panda list。 
        
      parameters:
        - name: page
          in: query
          description: page of Pandas to return
          type: integer
      responses:
        200:
          description: response ok
          schema:
            $ref: '#/definitions/RetPanda'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
          
  /panda/{idx}:
    x-summary: Get Panda by Index
    get:
      tags:
      - "Panda"
      summary: Get a panda by its index
      description: Get Panda by its index. 
      produces:
        - application/json
      parameters:
        - name: idx
          in: path
          description: Panda index
          type: integer
          required: true
      responses:
        200: 
          description: response ok
          schema:
            $ref: '#/definitions/RetPanda'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
  /panda/count:
    x-summary: Count of Total Pandas
    get:
      tags:
      - "Panda"
      summary: Return count of total Pandas
      description: Return total Pandas in database. Count is saved in Value field
      produces:
        - application/json
      responses:
        200: 
          description: response ok
          schema:
            $ref: '#/definitions/RetSimple'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
          
  /panda/{owner}/ownername:
    x-summary: Update Ownername
    put:
      tags: 
      - "Panda"
      summary: Update a specific owner's ownername
      description: Owner is a base64 encoded string. This API find all Pandas with the same specified owner and change all ownername
      produces:
        - application/json
      parameters:
        - name: owner
          in: path
          description: owner address
          type: string
          required: true
        - name: name
          in: query
          description: new name for owner
          type: string
          required: true
      responses:
        200:
          description: response ok
          schema:
            $ref: '#/definitions/RetSimple'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
  /panda/{idx}/photo:
    x-summary: Update Panda Photo Address
    put:
      tags: 
      - "Panda"
      summary: Update the photo address of a panda
      description: This API updates the photo address of the panda having the index provided
      parameters:
        - name: idx
          in: path
          description: index of a panda
          type: integer
          required: true
        - name: addr
          in: query
          description: photo address to be assigned to the panda
          type: string
          required: true
      responses:
        200:
          description: response ok
          schema:
            $ref: '#/definitions/RetSimple'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
  /panda/{idx}/snap:
    x-summary: Update Panda Photo Address
    put:
      tags: 
      - "Panda"
      summary: Update the snap shot address of a panda
      description: This API updates the snapshot address of the panda having the index provided
      parameters:
        - name: idx
          in: path
          description: index of a panda
          type: integer
          required: true
        - name: addr
          in: query
          description: photo address to be assigned to the panda
          type: string
          required: true
      responses:
        200:
          description: response ok
          schema:
            $ref: '#/definitions/RetSimple'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
  /display/pagesize:
    x-summary: Page Size
    get: 
      tags: 
      - "Display"
      summary: Get page size
      description: Page size is used to determine how many objects in a page to return if the method can be return by page
      responses:
        200: 
          description: response ok. page size is store in extra attribute
          schema:
            type: object
            properties:
              code:
                type : integer
              message:
                type: string
              value:
                type: string
              extraCode:
                type: integer
            required:
              - code
              - message
              - value
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
    put:
      tags: 
      - "Display"
      summary: Set page size
      description: Set the page size. If it does not be set, system will use "pagesize" defined in the app.conf file。
      parameters:
        - name: size
          in: query
          description: number of pandas in a page
          type: integer
          required: true
      responses:
        200:
          description: response ok
          schema:
            $ref: '#/definitions/RetSimple'
        202:
          description: Request is accepted but not gurantee to be executed
          schema:
            $ref: '#/definitions/RetSimple'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
             

definitions:
  RetSimple:
    title: RetSimple
    type: object
    properties:
      code:
        type : integer
      message:
        type: string
      value:
        type: string
      extraCode:
        type: integer
    required:
      - code
      - message
    example:
      code: 404
      message: "fail code 404"
      value: 
      extraCode: 0
  RetPanda:
    title: RetPanda
    type: object
    properties:
      code:
        type : integer
      message:
        type: string
      value:
        type: string
      extraCode:
        type: integer
      pandas:
        type: array
        items:
          $ref: '#/definitions/Panda'
    required:
      - code
      - message
    example:
      code: 200
      message: "200 OK"
      value: ""
      extraCode: 0
      pandas:
        - pandaIndex: 0
          genes: "MDhmZTQxMTRlMDlkYTkyODJjY2Q4ZjY0NDExYTRiNTI="
          birthTime: 1523031825
          coolDown: 1800
          rank: 0
          motherID: 0
          fatherID: 0
          generation: 0
          owner: "NGUyODI4MGIwZTZhNDA1ZjU0MjI="
          ownerName: "divine-frog"
          photoURL: "localofphoto"
          snapURL:
        - pandaIndex: 1
          genes: "MjQ1NjRmNzZmMjcxMGQxMDI2MWE2N2FlNTc3MGUxNzc="
          birthTime: 1523031825
          coolDown: 172800
          rank: 0
          motherID: 0
          fatherID: 0
          generation: 0
          owner: "NjQyOTZlM2IyNDM0MTAyNDFlMjY="
          ownerName: "frosty-butterfly"
          photoURL: "localofphoto"
          snapURL:
    
  Panda:
    title: Panda
    type: object
    properties:
      pandaIndex:
        type: integer
      genes:
        type: string
      birthTime:
        type: integer
      coolDown:
        type: integer 
      rank:
        type: integer
      motherID:
        type: integer
      fatherID:
        type: integer
      generation:
        type: integer
      owner:
        type: string
      ownerName:
        type: string
      photoURL:
        type: string
      snapURL:
        type: string
    example:
      pandaIndex: 0
      genes: "MDhmZTQxMTRlMDlkYTkyODJjY2Q4ZjY0NDExYTRiNTI="
      birthTime: 1523031825
      coolDown: 1800
      rank: 0
      motherID: 0
      fatherID: 0
      generation: 0
      owner: "NGUyODI4MGIwZTZhNDA1ZjU0MjI="
      ownerName: "divine-frog"
      photoURL: "localofphoto"
      snapURL:
    
  
 # Descriptions of common responses
responses:
  BadRequest:
    description: User request is invalid
    schema:
      $ref: "#/definitions/RetSimple"
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: "#/definitions/RetSimple"
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: "#/definitions/RetSimple"